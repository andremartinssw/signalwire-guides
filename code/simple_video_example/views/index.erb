<script src="https://cdn.signalwire.com/libs/js/signalwire/signalwire-alpha-preview-2.js"></script>
<script type="text/javascript" src="https://webrtc.github.io/adapter/adapter-latest.js"></script>

<div class="container">
  <div class="row">
    <div class="col">
      <h5>Remote Video (room: <%= @room %>, user: <%= @user %>)</h5>
      <div>Room URL: <a href="<%= @room_url %>"><%= @room_url %></a></div>
    </div>
  </div>
  <div class="row">
    <div class="col">
      <div id="rootElement"></div>
    </div>
  </div>
  <div class="row">
    <div class="col">
      <div class="btn-group w-100" role="group">
        <button id="muteSelfBtn" class="btn btn-warning px-3 mt-2 d-none" onClick="muteSelf()" disabled="true">Mute Self</button>
        <button id="unmuteSelfBtn" class="btn btn-warning px-3 mt-2 d-none" onClick="unmuteSelf()" disabled="true">UnMute Self</button>
      </div>
    </div>
    <div class="col">
      <div class="btn-group w-100" role="group">
        <button id="muteVideoSelfBtn" class="btn btn-warning px-3 mt-2 d-none" onClick="muteVideoSelf()" disabled="true">Video Mute Self</button>
        <button id="unmuteVideoSelfBtn" class="btn btn-warning px-3 mt-2 d-none" onClick="unmuteVideoSelf()" disabled="true">Video UnMute Self</button>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
    var client;
    var rtcSession = null;

    var host = '<%= ENV.fetch('HOST', '') %>';
    var token = "<%= @token %>";

    const muteButtons = [
      muteSelfBtn,
      unmuteSelfBtn,
      muteVideoSelfBtn,
      unmuteVideoSelfBtn
    ]

    ready(function() {
      connect();
    });

    /**
     * Connect with Relay creating a client and attaching all the event handler.
    */
    function connect() {
      VideoSDK.createRTCSession({
        host: host, // allow switch between staging and production
        token: token,
        rootElementId: 'rootElement',
        audio: '1',
        video: '1',
      }).then(rtc => {
        // Make it global
        rtcSession = rtc

        console.debug('Video SDK room', rtcSession)

        rtcSession.on('destroy', (params) => {
          hangup()
        })

      rtcSession.on('room.started', (params) =>
        console.debug('>> DEMO room.started', params)
      )
      rtcSession.on('room.subscribed', (params) => {
        console.debug('>> DEMO room.subscribed', params)

        muteButtons.forEach(button => {
          button.classList.remove('d-none');
          button.disabled = false;
        })
      })
      rtcSession.on('room.updated', (params) =>
        console.debug('>> DEMO room.updated', params)
      )
      rtcSession.on('room.ended', (params) => {
        console.debug('>> DEMO room.ended', params)
        hangup()
      })
      rtcSession.on('member.joined', (params) =>
        console.debug('>> DEMO member.joined', params)
      )
      rtcSession.on('member.updated', (params) =>
        console.debug('>> DEMO member.updated', params)
      )
      rtcSession.on('member.left', (params) =>
        console.debug('>> DEMO member.left', params)
      )
      rtcSession.on('layout.changed', (params) =>
        console.debug('>> DEMO layout.changed', params)
      )
      rtcSession.on('track', (event) =>
        console.debug('>> DEMO track', event)
      )

      rtcSession.join()
    })
  }

  /**
    * Hangup the rtcSession if present
  */
  function hangup() {
    if (rtcSession) {
      rtcSession.hangup()
    }

    muteButtons.forEach(button => {
      button.classList.add('d-none');
      button.disabled = true;
    })
  }

  // jQuery document.ready equivalent
  function ready(callback) {
    if (document.readyState != 'loading') {
      callback();
    } else if (document.addEventListener) {
      document.addEventListener('DOMContentLoaded', callback);
    } else {
      document.attachEvent('onreadystatechange', function() {
        if (document.readyState != 'loading') {
          callback();
        }
      });
    }
  }

  function muteAll() {
    rtcSession.audioMute('all')
  }

  function unmuteAll() {
    rtcSession.audioUnmute('all')
  }

  function muteSelf() {
    rtcSession.audioMute(rtcSession.memberId)
  }

  function unmuteSelf() {
    rtcSession.audioUnmute(rtcSession.memberId)
  }

  function muteVideoAll() {
    rtcSession.videoMute('all')
  }

  function unmuteVideoAll() {
    rtcSession.videoUnmute('all')
  }

  function muteVideoSelf() {
    rtcSession.videoMute(rtcSession.memberId)
  }

  function unmuteVideoSelf() {
    rtcSession.videoUnmute(rtcSession.memberId)
  }
</script>
